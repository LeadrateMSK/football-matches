/*! For license information please see betting.js.LICENSE.txt */
(() => {
  const e = {
    757: (e, t, r) => { e.exports = r(666); },
    669: (e, t, r) => { e.exports = r(609); },
    448: (e, t, r) => {
      const n = r(867); const o = r(26); const i = r(372); const a = r(327); const s = r(97); const c = r(109); const u = r(985); const l = r(61); e.exports = function (e) {
        return new Promise(((t, r) => {
          let f = e.data; const p = e.headers; n.isFormData(f) && delete p['Content-Type']; let d = new XMLHttpRequest(); if (e.auth) { const h = e.auth.username || ''; const m = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : ''; p.Authorization = `Basic ${btoa(`${h}:${m}`)}`; } const y = s(e.baseURL, e.url); if (d.open(e.method.toUpperCase(), a(y, e.params, e.paramsSerializer), !0), d.timeout = e.timeout, d.onreadystatechange = function () {
            if (d && d.readyState === 4 && (d.status !== 0 || d.responseURL && d.responseURL.indexOf('file:') === 0)) {
              const n = 'getAllResponseHeaders' in d ? c(d.getAllResponseHeaders()) : null; const i = {
                data: e.responseType && e.responseType !== 'text' ? d.response : d.responseText, status: d.status, statusText: d.statusText, headers: n, config: e, request: d,
              }; o(t, r, i), d = null;
            }
          }, d.onabort = function () { d && (r(l('Request aborted', e, 'ECONNABORTED', d)), d = null); }, d.onerror = function () { r(l('Network Error', e, null, d)), d = null; }, d.ontimeout = function () { let t = `timeout of ${e.timeout}ms exceeded`; e.timeoutErrorMessage && (t = e.timeoutErrorMessage), r(l(t, e, 'ECONNABORTED', d)), d = null; }, n.isStandardBrowserEnv()) { const v = (e.withCredentials || u(y)) && e.xsrfCookieName ? i.read(e.xsrfCookieName) : void 0; v && (p[e.xsrfHeaderName] = v); } if ('setRequestHeader' in d && n.forEach(p, ((e, t) => { void 0 === f && t.toLowerCase() === 'content-type' ? delete p[t] : d.setRequestHeader(t, e); })), n.isUndefined(e.withCredentials) || (d.withCredentials = !!e.withCredentials), e.responseType) try { d.responseType = e.responseType; } catch (t) { if (e.responseType !== 'json') throw t; } typeof e.onDownloadProgress === 'function' && d.addEventListener('progress', e.onDownloadProgress), typeof e.onUploadProgress === 'function' && d.upload && d.upload.addEventListener('progress', e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then(((e) => { d && (d.abort(), r(e), d = null); })), f || (f = null), d.send(f);
        }));
      };
    },
    609: (e, t, r) => {
      const n = r(867); const o = r(849); const i = r(321); const a = r(185); function s(e) { const t = new i(e); const r = o(i.prototype.request, t); return n.extend(r, i.prototype, t), n.extend(r, t), r; } const c = s(r(655)); c.Axios = i, c.create = function (e) { return s(a(c.defaults, e)); }, c.Cancel = r(263), c.CancelToken = r(972), c.isCancel = r(502), c.all = function (e) { return Promise.all(e); }, c.spread = r(713), c.isAxiosError = r(268), e.exports = c, e.exports.default = c;
    },
    263: (e) => {
      function t(e) { this.message = e; }t.prototype.toString = function () { return `Cancel${this.message ? `: ${this.message}` : ''}`; }, t.prototype.__CANCEL__ = !0, e.exports = t;
    },
    972: (e, t, r) => {
      const n = r(263); function o(e) { if (typeof e !== 'function') throw new TypeError('executor must be a function.'); let t; this.promise = new Promise(((e) => { t = e; })); const r = this; e(((e) => { r.reason || (r.reason = new n(e), t(r.reason)); })); }o.prototype.throwIfRequested = function () { if (this.reason) throw this.reason; }, o.source = function () { let e; return { token: new o(((t) => { e = t; })), cancel: e }; }, e.exports = o;
    },
    502: (e) => {
      e.exports = function (e) { return !(!e || !e.__CANCEL__); };
    },
    321: (e, t, r) => {
      const n = r(867); const o = r(327); const i = r(782); const a = r(572); const s = r(185); function c(e) { this.defaults = e, this.interceptors = { request: new i(), response: new i() }; }c.prototype.request = function (e) { typeof e === 'string' ? (e = arguments[1] || {}).url = arguments[0] : e = e || {}, (e = s(this.defaults, e)).method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = 'get'; const t = [a, void 0]; let r = Promise.resolve(e); for (this.interceptors.request.forEach(((e) => { t.unshift(e.fulfilled, e.rejected); })), this.interceptors.response.forEach(((e) => { t.push(e.fulfilled, e.rejected); })); t.length;)r = r.then(t.shift(), t.shift()); return r; }, c.prototype.getUri = function (e) { return e = s(this.defaults, e), o(e.url, e.params, e.paramsSerializer).replace(/^\?/, ''); }, n.forEach(['delete', 'get', 'head', 'options'], ((e) => { c.prototype[e] = function (t, r) { return this.request(s(r || {}, { method: e, url: t, data: (r || {}).data })); }; })), n.forEach(['post', 'put', 'patch'], ((e) => { c.prototype[e] = function (t, r, n) { return this.request(s(n || {}, { method: e, url: t, data: r })); }; })), e.exports = c;
    },
    782: (e, t, r) => {
      const n = r(867); function o() { this.handlers = []; }o.prototype.use = function (e, t) { return this.handlers.push({ fulfilled: e, rejected: t }), this.handlers.length - 1; }, o.prototype.eject = function (e) { this.handlers[e] && (this.handlers[e] = null); }, o.prototype.forEach = function (e) { n.forEach(this.handlers, ((t) => { t !== null && e(t); })); }, e.exports = o;
    },
    97: (e, t, r) => {
      const n = r(793); const o = r(303); e.exports = function (e, t) { return e && !n(t) ? o(e, t) : t; };
    },
    61: (e, t, r) => {
      const n = r(481); e.exports = function (e, t, r, o, i) { const a = new Error(e); return n(a, t, r, o, i); };
    },
    572: (e, t, r) => {
      const n = r(867); const o = r(527); const i = r(502); const a = r(655); function s(e) { e.cancelToken && e.cancelToken.throwIfRequested(); }e.exports = function (e) { return s(e), e.headers = e.headers || {}, e.data = o(e.data, e.headers, e.transformRequest), e.headers = n.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), n.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], ((t) => { delete e.headers[t]; })), (e.adapter || a.adapter)(e).then(((t) => (s(e), t.data = o(t.data, t.headers, e.transformResponse), t)), ((t) => (i(t) || (s(e), t && t.response && (t.response.data = o(t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t)))); };
    },
    481: (e) => {
      e.exports = function (e, t, r, n, o) {
        return e.config = t, r && (e.code = r), e.request = n, e.response = o, e.isAxiosError = !0, e.toJSON = function () {
          return {
            message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: this.config, code: this.code,
          };
        }, e;
      };
    },
    185: (e, t, r) => {
      const n = r(867); e.exports = function (e, t) { t = t || {}; const r = {}; const o = ['url', 'method', 'data']; const i = ['headers', 'auth', 'proxy', 'params']; const a = ['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress', 'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding']; const s = ['validateStatus']; function c(e, t) { return n.isPlainObject(e) && n.isPlainObject(t) ? n.merge(e, t) : n.isPlainObject(t) ? n.merge({}, t) : n.isArray(t) ? t.slice() : t; } function u(o) { n.isUndefined(t[o]) ? n.isUndefined(e[o]) || (r[o] = c(void 0, e[o])) : r[o] = c(e[o], t[o]); }n.forEach(o, ((e) => { n.isUndefined(t[e]) || (r[e] = c(void 0, t[e])); })), n.forEach(i, u), n.forEach(a, ((o) => { n.isUndefined(t[o]) ? n.isUndefined(e[o]) || (r[o] = c(void 0, e[o])) : r[o] = c(void 0, t[o]); })), n.forEach(s, ((n) => { n in t ? r[n] = c(e[n], t[n]) : n in e && (r[n] = c(void 0, e[n])); })); const l = o.concat(i).concat(a).concat(s); const f = Object.keys(e).concat(Object.keys(t)).filter(((e) => l.indexOf(e) === -1)); return n.forEach(f, u), r; };
    },
    26: (e, t, r) => {
      const n = r(61); e.exports = function (e, t, r) { const o = r.config.validateStatus; r.status && o && !o(r.status) ? t(n(`Request failed with status code ${r.status}`, r.config, null, r.request, r)) : e(r); };
    },
    527: (e, t, r) => {
      const n = r(867); e.exports = function (e, t, r) { return n.forEach(r, ((r) => { e = r(e, t); })), e; };
    },
    655: (e, t, r) => {
      const n = r(155); const o = r(867); const i = r(16); const a = { 'Content-Type': 'application/x-www-form-urlencoded' }; function s(e, t) { !o.isUndefined(e) && o.isUndefined(e['Content-Type']) && (e['Content-Type'] = t); } let c; const u = {
        adapter: ((typeof XMLHttpRequest !== 'undefined' || void 0 !== n && Object.prototype.toString.call(n) === '[object process]') && (c = r(448)), c), transformRequest: [function (e, t) { return i(t, 'Accept'), i(t, 'Content-Type'), o.isFormData(e) || o.isArrayBuffer(e) || o.isBuffer(e) || o.isStream(e) || o.isFile(e) || o.isBlob(e) ? e : o.isArrayBufferView(e) ? e.buffer : o.isURLSearchParams(e) ? (s(t, 'application/x-www-form-urlencoded;charset=utf-8'), e.toString()) : o.isObject(e) ? (s(t, 'application/json;charset=utf-8'), JSON.stringify(e)) : e; }], transformResponse: [function (e) { if (typeof e === 'string') try { e = JSON.parse(e); } catch (e) {} return e; }], timeout: 0, xsrfCookieName: 'XSRF-TOKEN', xsrfHeaderName: 'X-XSRF-TOKEN', maxContentLength: -1, maxBodyLength: -1, validateStatus(e) { return e >= 200 && e < 300; },
      }; u.headers = { common: { Accept: 'application/json, text/plain, */*' } }, o.forEach(['delete', 'get', 'head'], ((e) => { u.headers[e] = {}; })), o.forEach(['post', 'put', 'patch'], ((e) => { u.headers[e] = o.merge(a); })), e.exports = u;
    },
    849: (e) => {
      e.exports = function (e, t) { return function () { for (var r = new Array(arguments.length), n = 0; n < r.length; n++)r[n] = arguments[n]; return e.apply(t, r); }; };
    },
    327: (e, t, r) => {
      const n = r(867); function o(e) {
        return encodeURIComponent(e).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',')
          .replace(/%20/g, '+')
          .replace(/%5B/gi, '[')
          .replace(/%5D/gi, ']');
      }e.exports = function (e, t, r) { if (!t) return e; let i; if (r)i = r(t); else if (n.isURLSearchParams(t))i = t.toString(); else { const a = []; n.forEach(t, ((e, t) => { e != null && (n.isArray(e) ? t += '[]' : e = [e], n.forEach(e, ((e) => { n.isDate(e) ? e = e.toISOString() : n.isObject(e) && (e = JSON.stringify(e)), a.push(`${o(t)}=${o(e)}`); }))); })), i = a.join('&'); } if (i) { const s = e.indexOf('#'); s !== -1 && (e = e.slice(0, s)), e += (e.indexOf('?') === -1 ? '?' : '&') + i; } return e; };
    },
    303: (e) => {
      e.exports = function (e, t) { return t ? `${e.replace(/\/+$/, '')}/${t.replace(/^\/+/, '')}` : e; };
    },
    372: (e, t, r) => {
      const n = r(867); e.exports = n.isStandardBrowserEnv() ? { write(e, t, r, o, i, a) { const s = []; s.push(`${e}=${encodeURIComponent(t)}`), n.isNumber(r) && s.push(`expires=${new Date(r).toGMTString()}`), n.isString(o) && s.push(`path=${o}`), n.isString(i) && s.push(`domain=${i}`), !0 === a && s.push('secure'), document.cookie = s.join('; '); }, read(e) { const t = document.cookie.match(new RegExp(`(^|;\\s*)(${e})=([^;]*)`)); return t ? decodeURIComponent(t[3]) : null; }, remove(e) { this.write(e, '', Date.now() - 864e5); } } : { write() {}, read() { return null; }, remove() {} };
    },
    793: (e) => {
      e.exports = function (e) { return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e); };
    },
    268: (e) => {
      e.exports = function (e) { return typeof e === 'object' && !0 === e.isAxiosError; };
    },
    985: (e, t, r) => {
      const n = r(867); e.exports = n.isStandardBrowserEnv() ? (function () {
        let e; const t = /(msie|trident)/i.test(navigator.userAgent); const r = document.createElement('a'); function o(e) {
          let n = e; return t && (r.setAttribute('href', n), n = r.href), r.setAttribute('href', n), {
            href: r.href, protocol: r.protocol ? r.protocol.replace(/:$/, '') : '', host: r.host, search: r.search ? r.search.replace(/^\?/, '') : '', hash: r.hash ? r.hash.replace(/^#/, '') : '', hostname: r.hostname, port: r.port, pathname: r.pathname.charAt(0) === '/' ? r.pathname : `/${r.pathname}`,
          };
        } return e = o(window.location.href), function (t) { const r = n.isString(t) ? o(t) : t; return r.protocol === e.protocol && r.host === e.host; };
      }()) : function () { return !0; };
    },
    16: (e, t, r) => {
      const n = r(867); e.exports = function (e, t) { n.forEach(e, ((r, n) => { n !== t && n.toUpperCase() === t.toUpperCase() && (e[t] = r, delete e[n]); })); };
    },
    109: (e, t, r) => {
      const n = r(867); const o = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent']; e.exports = function (e) { let t; let r; let i; const a = {}; return e ? (n.forEach(e.split('\n'), ((e) => { if (i = e.indexOf(':'), t = n.trim(e.substr(0, i)).toLowerCase(), r = n.trim(e.substr(i + 1)), t) { if (a[t] && o.indexOf(t) >= 0) return; a[t] = t === 'set-cookie' ? (a[t] ? a[t] : []).concat([r]) : a[t] ? `${a[t]}, ${r}` : r; } })), a) : a; };
    },
    713: (e) => {
      e.exports = function (e) { return function (t) { return e.apply(null, t); }; };
    },
    867: (e, t, r) => {
      const n = r(849); const o = Object.prototype.toString; function i(e) { return o.call(e) === '[object Array]'; } function a(e) { return void 0 === e; } function s(e) { return e !== null && typeof e === 'object'; } function c(e) { if (o.call(e) !== '[object Object]') return !1; const t = Object.getPrototypeOf(e); return t === null || t === Object.prototype; } function u(e) { return o.call(e) === '[object Function]'; } function l(e, t) { if (e != null) if (typeof e !== 'object' && (e = [e]), i(e)) for (let r = 0, n = e.length; r < n; r++)t.call(null, e[r], r, e); else for (const o in e)Object.prototype.hasOwnProperty.call(e, o) && t.call(null, e[o], o, e); }e.exports = {
        isArray: i, isArrayBuffer(e) { return o.call(e) === '[object ArrayBuffer]'; }, isBuffer(e) { return e !== null && !a(e) && e.constructor !== null && !a(e.constructor) && typeof e.constructor.isBuffer === 'function' && e.constructor.isBuffer(e); }, isFormData(e) { return typeof FormData !== 'undefined' && e instanceof FormData; }, isArrayBufferView(e) { return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer; }, isString(e) { return typeof e === 'string'; }, isNumber(e) { return typeof e === 'number'; }, isObject: s, isPlainObject: c, isUndefined: a, isDate(e) { return o.call(e) === '[object Date]'; }, isFile(e) { return o.call(e) === '[object File]'; }, isBlob(e) { return o.call(e) === '[object Blob]'; }, isFunction: u, isStream(e) { return s(e) && u(e.pipe); }, isURLSearchParams(e) { return typeof URLSearchParams !== 'undefined' && e instanceof URLSearchParams; }, isStandardBrowserEnv() { return (typeof navigator === 'undefined' || navigator.product !== 'ReactNative' && navigator.product !== 'NativeScript' && navigator.product !== 'NS') && (typeof window !== 'undefined' && typeof document !== 'undefined'); }, forEach: l, merge: function e() { const t = {}; function r(r, n) { c(t[n]) && c(r) ? t[n] = e(t[n], r) : c(r) ? t[n] = e({}, r) : i(r) ? t[n] = r.slice() : t[n] = r; } for (let n = 0, o = arguments.length; n < o; n++)l(arguments[n], r); return t; }, extend(e, t, r) { return l(t, ((t, o) => { e[o] = r && typeof t === 'function' ? n(t, r) : t; })), e; }, trim(e) { return e.replace(/^\s*/, '').replace(/\s*$/, ''); }, stripBOM(e) { return e.charCodeAt(0) === 65279 && (e = e.slice(1)), e; },
      };
    },
    155: (e) => { let t; let r; const n = e.exports = {}; function o() { throw new Error('setTimeout has not been defined'); } function i() { throw new Error('clearTimeout has not been defined'); } function a(e) { if (t === setTimeout) return setTimeout(e, 0); if ((t === o || !t) && setTimeout) return t = setTimeout, setTimeout(e, 0); try { return t(e, 0); } catch (r) { try { return t.call(null, e, 0); } catch (r) { return t.call(this, e, 0); } } }!(function () { try { t = typeof setTimeout === 'function' ? setTimeout : o; } catch (e) { t = o; } try { r = typeof clearTimeout === 'function' ? clearTimeout : i; } catch (e) { r = i; } }()); let s; let c = []; let u = !1; let l = -1; function f() { u && s && (u = !1, s.length ? c = s.concat(c) : l = -1, c.length && p()); } function p() { if (!u) { const e = a(f); u = !0; for (let t = c.length; t;) { for (s = c, c = []; ++l < t;)s && s[l].run(); l = -1, t = c.length; }s = null, u = !1, (function (e) { if (r === clearTimeout) return clearTimeout(e); if ((r === i || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e); try { r(e); } catch (t) { try { return r.call(null, e); } catch (t) { return r.call(this, e); } } }(e)); } } function d(e, t) { this.fun = e, this.array = t; } function h() {}n.nextTick = function (e) { const t = new Array(arguments.length - 1); if (arguments.length > 1) for (let r = 1; r < arguments.length; r++)t[r - 1] = arguments[r]; c.push(new d(e, t)), c.length !== 1 || u || a(p); }, d.prototype.run = function () { this.fun.apply(null, this.array); }, n.title = 'browser', n.browser = !0, n.env = {}, n.argv = [], n.version = '', n.versions = {}, n.on = h, n.addListener = h, n.once = h, n.off = h, n.removeListener = h, n.removeAllListeners = h, n.emit = h, n.prependListener = h, n.prependOnceListener = h, n.listeners = function (e) { return []; }, n.binding = function (e) { throw new Error('process.binding is not supported'); }, n.cwd = function () { return '/'; }, n.chdir = function (e) { throw new Error('process.chdir is not supported'); }, n.umask = function () { return 0; }; },
    798: (e) => {
      const t = String.prototype.replace; const r = /%20/g; e.exports = {
        default: 'RFC3986', formatters: { RFC1738(e) { return t.call(e, r, '+'); }, RFC3986(e) { return e; } }, RFC1738: 'RFC1738', RFC3986: 'RFC3986',
      };
    },
    129: (e, t, r) => {
      const n = r(261); const o = r(235); const i = r(798); e.exports = { formats: i, parse: o, stringify: n };
    },
    235: (e, t, r) => {
      const n = r(769); const o = Object.prototype.hasOwnProperty; const i = {
        allowDots: !1, allowPrototypes: !1, arrayLimit: 20, charset: 'utf-8', charsetSentinel: !1, comma: !1, decoder: n.decode, delimiter: '&', depth: 5, ignoreQueryPrefix: !1, interpretNumericEntities: !1, parameterLimit: 1e3, parseArrays: !0, plainObjects: !1, strictNullHandling: !1,
      }; const a = function (e) { return e.replace(/&#(\d+);/g, ((e, t) => String.fromCharCode(parseInt(t, 10)))); }; const s = function (e, t, r) { if (e) { const n = r.allowDots ? e.replace(/\.([^.[]+)/g, '[$1]') : e; const i = /(\[[^[\]]*])/g; let a = /(\[[^[\]]*])/.exec(n); const s = a ? n.slice(0, a.index) : n; const c = []; if (s) { if (!r.plainObjects && o.call(Object.prototype, s) && !r.allowPrototypes) return; c.push(s); } for (let u = 0; (a = i.exec(n)) !== null && u < r.depth;) { if (u += 1, !r.plainObjects && o.call(Object.prototype, a[1].slice(1, -1)) && !r.allowPrototypes) return; c.push(a[1]); } return a && c.push(`[${n.slice(a.index)}]`), (function (e, t, r) { for (var n = t, o = e.length - 1; o >= 0; --o) { var i; const a = e[o]; if (a === '[]' && r.parseArrays)i = [].concat(n); else { i = r.plainObjects ? Object.create(null) : {}; const s = a.charAt(0) === '[' && a.charAt(a.length - 1) === ']' ? a.slice(1, -1) : a; const c = parseInt(s, 10); r.parseArrays || s !== '' ? !isNaN(c) && a !== s && String(c) === s && c >= 0 && r.parseArrays && c <= r.arrayLimit ? (i = [])[c] = n : i[s] = n : i = { 0: n }; }n = i; } return n; }(c, t, r)); } }; e.exports = function (e, t) {
        const r = (function (e) {
          if (!e) return i; if (e.decoder !== null && void 0 !== e.decoder && typeof e.decoder !== 'function') throw new TypeError('Decoder has to be a function.'); if (void 0 !== e.charset && e.charset !== 'utf-8' && e.charset !== 'iso-8859-1') throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined'); const t = void 0 === e.charset ? i.charset : e.charset; return {
            allowDots: void 0 === e.allowDots ? i.allowDots : !!e.allowDots, allowPrototypes: typeof e.allowPrototypes === 'boolean' ? e.allowPrototypes : i.allowPrototypes, arrayLimit: typeof e.arrayLimit === 'number' ? e.arrayLimit : i.arrayLimit, charset: t, charsetSentinel: typeof e.charsetSentinel === 'boolean' ? e.charsetSentinel : i.charsetSentinel, comma: typeof e.comma === 'boolean' ? e.comma : i.comma, decoder: typeof e.decoder === 'function' ? e.decoder : i.decoder, delimiter: typeof e.delimiter === 'string' || n.isRegExp(e.delimiter) ? e.delimiter : i.delimiter, depth: typeof e.depth === 'number' ? e.depth : i.depth, ignoreQueryPrefix: !0 === e.ignoreQueryPrefix, interpretNumericEntities: typeof e.interpretNumericEntities === 'boolean' ? e.interpretNumericEntities : i.interpretNumericEntities, parameterLimit: typeof e.parameterLimit === 'number' ? e.parameterLimit : i.parameterLimit, parseArrays: !1 !== e.parseArrays, plainObjects: typeof e.plainObjects === 'boolean' ? e.plainObjects : i.plainObjects, strictNullHandling: typeof e.strictNullHandling === 'boolean' ? e.strictNullHandling : i.strictNullHandling,
          };
        }(t)); if (e === '' || e == null) return r.plainObjects ? Object.create(null) : {}; for (var c = typeof e === 'string' ? (function (e, t) { let r; const s = {}; const c = t.ignoreQueryPrefix ? e.replace(/^\?/, '') : e; const u = t.parameterLimit === 1 / 0 ? void 0 : t.parameterLimit; const l = c.split(t.delimiter, u); let f = -1; let p = t.charset; if (t.charsetSentinel) for (r = 0; r < l.length; ++r)l[r].indexOf('utf8=') === 0 && (l[r] === 'utf8=%E2%9C%93' ? p = 'utf-8' : l[r] === 'utf8=%26%2310003%3B' && (p = 'iso-8859-1'), f = r, r = l.length); for (r = 0; r < l.length; ++r) if (r !== f) { var d; var h; const m = l[r]; const y = m.indexOf(']='); const v = y === -1 ? m.indexOf('=') : y + 1; v === -1 ? (d = t.decoder(m, i.decoder, p), h = t.strictNullHandling ? null : '') : (d = t.decoder(m.slice(0, v), i.decoder, p), h = t.decoder(m.slice(v + 1), i.decoder, p)), h && t.interpretNumericEntities && p === 'iso-8859-1' && (h = a(h)), h && t.comma && h.indexOf(',') > -1 && (h = h.split(',')), o.call(s, d) ? s[d] = n.combine(s[d], h) : s[d] = h; } return s; }(e, r)) : e, u = r.plainObjects ? Object.create(null) : {}, l = Object.keys(c), f = 0; f < l.length; ++f) { const p = l[f]; const d = s(p, c[p], r); u = n.merge(u, d, r); } return n.compact(u);
      };
    },
    261: (e, t, r) => {
      const n = r(769); const o = r(798); const i = Object.prototype.hasOwnProperty; const a = {
        brackets(e) { return `${e}[]`; }, comma: 'comma', indices(e, t) { return `${e}[${t}]`; }, repeat(e) { return e; },
      }; const s = Array.isArray; const c = Array.prototype.push; const u = function (e, t) { c.apply(e, s(t) ? t : [t]); }; const l = Date.prototype.toISOString; const f = {
        addQueryPrefix: !1, allowDots: !1, charset: 'utf-8', charsetSentinel: !1, delimiter: '&', encode: !0, encoder: n.encode, encodeValuesOnly: !1, formatter: o.formatters[o.default], indices: !1, serializeDate(e) { return l.call(e); }, skipNulls: !1, strictNullHandling: !1,
      }; const p = function e(t, r, o, i, a, c, l, p, d, h, m, y, v) { let g = t; if (typeof l === 'function' ? g = l(r, g) : g instanceof Date ? g = h(g) : o === 'comma' && s(g) && (g = g.join(',')), g === null) { if (i) return c && !y ? c(r, f.encoder, v) : r; g = ''; } if (typeof g === 'string' || typeof g === 'number' || typeof g === 'boolean' || n.isBuffer(g)) return c ? [`${m(y ? r : c(r, f.encoder, v))}=${m(c(g, f.encoder, v))}`] : [`${m(r)}=${m(String(g))}`]; let b; const w = []; if (void 0 === g) return w; if (s(l))b = l; else { const x = Object.keys(g); b = p ? x.sort(p) : x; } for (let E = 0; E < b.length; ++E) { const O = b[E]; a && g[O] === null || (s(g) ? u(w, e(g[O], typeof o === 'function' ? o(r, O) : r, o, i, a, c, l, p, d, h, m, y, v)) : u(w, e(g[O], r + (d ? `.${O}` : `[${O}]`), o, i, a, c, l, p, d, h, m, y, v))); } return w; }; e.exports = function (e, t) {
        let r; let n = e; const c = (function (e) {
          if (!e) return f; if (e.encoder !== null && void 0 !== e.encoder && typeof e.encoder !== 'function') throw new TypeError('Encoder has to be a function.'); const t = e.charset || f.charset; if (void 0 !== e.charset && e.charset !== 'utf-8' && e.charset !== 'iso-8859-1') throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'); let r = o.default; if (void 0 !== e.format) { if (!i.call(o.formatters, e.format)) throw new TypeError('Unknown format option provided.'); r = e.format; } const n = o.formatters[r]; let a = f.filter; return (typeof e.filter === 'function' || s(e.filter)) && (a = e.filter), {
            addQueryPrefix: typeof e.addQueryPrefix === 'boolean' ? e.addQueryPrefix : f.addQueryPrefix, allowDots: void 0 === e.allowDots ? f.allowDots : !!e.allowDots, charset: t, charsetSentinel: typeof e.charsetSentinel === 'boolean' ? e.charsetSentinel : f.charsetSentinel, delimiter: void 0 === e.delimiter ? f.delimiter : e.delimiter, encode: typeof e.encode === 'boolean' ? e.encode : f.encode, encoder: typeof e.encoder === 'function' ? e.encoder : f.encoder, encodeValuesOnly: typeof e.encodeValuesOnly === 'boolean' ? e.encodeValuesOnly : f.encodeValuesOnly, filter: a, formatter: n, serializeDate: typeof e.serializeDate === 'function' ? e.serializeDate : f.serializeDate, skipNulls: typeof e.skipNulls === 'boolean' ? e.skipNulls : f.skipNulls, sort: typeof e.sort === 'function' ? e.sort : null, strictNullHandling: typeof e.strictNullHandling === 'boolean' ? e.strictNullHandling : f.strictNullHandling,
          };
        }(t)); typeof c.filter === 'function' ? n = (0, c.filter)('', n) : s(c.filter) && (r = c.filter); let l; const d = []; if (typeof n !== 'object' || n === null) return ''; l = t && t.arrayFormat in a ? t.arrayFormat : t && 'indices' in t ? t.indices ? 'indices' : 'repeat' : 'indices'; const h = a[l]; r || (r = Object.keys(n)), c.sort && r.sort(c.sort); for (let m = 0; m < r.length; ++m) { const y = r[m]; c.skipNulls && n[y] === null || u(d, p(n[y], y, h, c.strictNullHandling, c.skipNulls, c.encode ? c.encoder : null, c.filter, c.sort, c.allowDots, c.serializeDate, c.formatter, c.encodeValuesOnly, c.charset)); } const v = d.join(c.delimiter); let g = !0 === c.addQueryPrefix ? '?' : ''; return c.charsetSentinel && (c.charset === 'iso-8859-1' ? g += 'utf8=%26%2310003%3B&' : g += 'utf8=%E2%9C%93&'), v.length > 0 ? g + v : '';
      };
    },
    769: (e) => {
      const t = Object.prototype.hasOwnProperty; const r = Array.isArray; const n = (function () { for (var e = [], t = 0; t < 256; ++t)e.push(`%${((t < 16 ? '0' : '') + t.toString(16)).toUpperCase()}`); return e; }()); const o = function (e, t) { for (var r = t && t.plainObjects ? Object.create(null) : {}, n = 0; n < e.length; ++n) void 0 !== e[n] && (r[n] = e[n]); return r; }; e.exports = {
        arrayToObject: o, assign(e, t) { return Object.keys(t).reduce(((e, r) => (e[r] = t[r], e)), e); }, combine(e, t) { return [].concat(e, t); }, compact(e) { for (var t = [{ obj: { o: e }, prop: 'o' }], n = [], o = 0; o < t.length; ++o) for (let i = t[o], a = i.obj[i.prop], s = Object.keys(a), c = 0; c < s.length; ++c) { const u = s[c]; const l = a[u]; typeof l === 'object' && l !== null && n.indexOf(l) === -1 && (t.push({ obj: a, prop: u }), n.push(l)); } return (function (e) { for (;e.length > 1;) { const t = e.pop(); const n = t.obj[t.prop]; if (r(n)) { for (var o = [], i = 0; i < n.length; ++i) void 0 !== n[i] && o.push(n[i]); t.obj[t.prop] = o; } } }(t)), e; }, decode(e, t, r) { const n = e.replace(/\+/g, ' '); if (r === 'iso-8859-1') return n.replace(/%[0-9a-f]{2}/gi, unescape); try { return decodeURIComponent(n); } catch (e) { return n; } }, encode(e, t, r) { if (e.length === 0) return e; const o = typeof e === 'string' ? e : String(e); if (r === 'iso-8859-1') return escape(o).replace(/%u[0-9a-f]{4}/gi, ((e) => `%26%23${parseInt(e.slice(2), 16)}%3B`)); for (var i = '', a = 0; a < o.length; ++a) { let s = o.charCodeAt(a); s === 45 || s === 46 || s === 95 || s === 126 || s >= 48 && s <= 57 || s >= 65 && s <= 90 || s >= 97 && s <= 122 ? i += o.charAt(a) : s < 128 ? i += n[s] : s < 2048 ? i += n[192 | s >> 6] + n[128 | 63 & s] : s < 55296 || s >= 57344 ? i += n[224 | s >> 12] + n[128 | s >> 6 & 63] + n[128 | 63 & s] : (a += 1, s = 65536 + ((1023 & s) << 10 | 1023 & o.charCodeAt(a)), i += n[240 | s >> 18] + n[128 | s >> 12 & 63] + n[128 | s >> 6 & 63] + n[128 | 63 & s]); } return i; }, isBuffer(e) { return !(!e || typeof e !== 'object') && !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e)); }, isRegExp(e) { return Object.prototype.toString.call(e) === '[object RegExp]'; }, merge: function e(n, i, a) { if (!i) return n; if (typeof i !== 'object') { if (r(n))n.push(i); else { if (!n || typeof n !== 'object') return [n, i]; (a && (a.plainObjects || a.allowPrototypes) || !t.call(Object.prototype, i)) && (n[i] = !0); } return n; } if (!n || typeof n !== 'object') return [n].concat(i); let s = n; return r(n) && !r(i) && (s = o(n, a)), r(n) && r(i) ? (i.forEach(((r, o) => { if (t.call(n, o)) { const i = n[o]; i && typeof i === 'object' && r && typeof r === 'object' ? n[o] = e(i, r, a) : n.push(r); } else n[o] = r; })), n) : Object.keys(i).reduce(((r, n) => { const o = i[n]; return t.call(r, n) ? r[n] = e(r[n], o, a) : r[n] = o, r; }), s); },
      };
    },
    666: (e) => {
      const t = (function (e) {
        let t; const r = Object.prototype; const n = r.hasOwnProperty; const o = typeof Symbol === 'function' ? Symbol : {}; const i = o.iterator || '@@iterator'; const a = o.asyncIterator || '@@asyncIterator'; const s = o.toStringTag || '@@toStringTag'; function c(e, t, r) {
          return Object.defineProperty(e, t, {
            value: r, enumerable: !0, configurable: !0, writable: !0,
          }), e[t];
        } try { c({}, ''); } catch (e) { c = function (e, t, r) { return e[t] = r; }; } function u(e, t, r, n) { const o = t && t.prototype instanceof y ? t : y; const i = Object.create(o.prototype); const a = new A(n || []); return i._invoke = (function (e, t, r) { let n = f; return function (o, i) { if (n === d) throw new Error('Generator is already running'); if (n === h) { if (o === 'throw') throw i; return R(); } for (r.method = o, r.arg = i; ;) { const a = r.delegate; if (a) { const s = N(a, r); if (s) { if (s === m) continue; return s; } } if (r.method === 'next')r.sent = r._sent = r.arg; else if (r.method === 'throw') { if (n === f) throw n = h, r.arg; r.dispatchException(r.arg); } else r.method === 'return' && r.abrupt('return', r.arg); n = d; const c = l(e, t, r); if (c.type === 'normal') { if (n = r.done ? h : p, c.arg === m) continue; return { value: c.arg, done: r.done }; }c.type === 'throw' && (n = h, r.method = 'throw', r.arg = c.arg); } }; }(e, r, a)), i; } function l(e, t, r) { try { return { type: 'normal', arg: e.call(t, r) }; } catch (e) { return { type: 'throw', arg: e }; } }e.wrap = u; var f = 'suspendedStart'; var p = 'suspendedYield'; var d = 'executing'; var h = 'completed'; var m = {}; function y() {} function v() {} function g() {} let b = {}; c(b, i, (function () { return this; })); const w = Object.getPrototypeOf; const x = w && w(w(S([]))); x && x !== r && n.call(x, i) && (b = x); const E = g.prototype = y.prototype = Object.create(b); function O(e) { ['next', 'throw', 'return'].forEach(((t) => { c(e, t, (function (e) { return this._invoke(t, e); })); })); } function j(e, t) { function r(o, i, a, s) { const c = l(e[o], e, i); if (c.type !== 'throw') { const u = c.arg; const f = u.value; return f && typeof f === 'object' && n.call(f, '__await') ? t.resolve(f.__await).then(((e) => { r('next', e, a, s); }), ((e) => { r('throw', e, a, s); })) : t.resolve(f).then(((e) => { u.value = e, a(u); }), ((e) => r('throw', e, a, s))); }s(c.arg); } let o; this._invoke = function (e, n) { function i() { return new t(((t, o) => { r(e, n, t, o); })); } return o = o ? o.then(i, i) : i(); }; } function N(e, r) { const n = e.iterator[r.method]; if (n === t) { if (r.delegate = null, r.method === 'throw') { if (e.iterator.return && (r.method = 'return', r.arg = t, N(e, r), r.method === 'throw')) return m; r.method = 'throw', r.arg = new TypeError("The iterator does not provide a 'throw' method"); } return m; } const o = l(n, e.iterator, r.arg); if (o.type === 'throw') return r.method = 'throw', r.arg = o.arg, r.delegate = null, m; const i = o.arg; return i ? i.done ? (r[e.resultName] = i.value, r.next = e.nextLoc, r.method !== 'return' && (r.method = 'next', r.arg = t), r.delegate = null, m) : i : (r.method = 'throw', r.arg = new TypeError('iterator result is not an object'), r.delegate = null, m); } function L(e) { const t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t); } function T(e) { const t = e.completion || {}; t.type = 'normal', delete t.arg, e.completion = t; } function A(e) { this.tryEntries = [{ tryLoc: 'root' }], e.forEach(L, this), this.reset(!0); } function S(e) { if (e) { const r = e[i]; if (r) return r.call(e); if (typeof e.next === 'function') return e; if (!isNaN(e.length)) { let o = -1; const a = function r() { for (;++o < e.length;) if (n.call(e, o)) return r.value = e[o], r.done = !1, r; return r.value = t, r.done = !0, r; }; return a.next = a; } } return { next: R }; } function R() { return { value: t, done: !0 }; } return v.prototype = g, c(E, 'constructor', g), c(g, 'constructor', v), v.displayName = c(g, s, 'GeneratorFunction'), e.isGeneratorFunction = function (e) { const t = typeof e === 'function' && e.constructor; return !!t && (t === v || (t.displayName || t.name) === 'GeneratorFunction'); }, e.mark = function (e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : (e.__proto__ = g, c(e, s, 'GeneratorFunction')), e.prototype = Object.create(E), e; }, e.awrap = function (e) { return { __await: e }; }, O(j.prototype), c(j.prototype, a, (function () { return this; })), e.AsyncIterator = j, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); const a = new j(u(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(((e) => (e.done ? e.value : a.next()))); }, O(E), c(E, s, 'Generator'), c(E, i, (function () { return this; })), c(E, 'toString', (() => '[object Generator]')), e.keys = function (e) { const t = []; for (const r in e)t.push(r); return t.reverse(), function r() { for (;t.length;) { const n = t.pop(); if (n in e) return r.value = n, r.done = !1, r; } return r.done = !0, r; }; }, e.values = S, A.prototype = {
          constructor: A, reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = 'next', this.arg = t, this.tryEntries.forEach(T), !e) for (const r in this)r.charAt(0) === 't' && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop() { this.done = !0; const e = this.tryEntries[0].completion; if (e.type === 'throw') throw e.arg; return this.rval; }, dispatchException(e) { if (this.done) throw e; const r = this; function o(n, o) { return s.type = 'throw', s.arg = e, r.next = n, o && (r.method = 'next', r.arg = t), !!o; } for (let i = this.tryEntries.length - 1; i >= 0; --i) { const a = this.tryEntries[i]; var s = a.completion; if (a.tryLoc === 'root') return o('end'); if (a.tryLoc <= this.prev) { const c = n.call(a, 'catchLoc'); const u = n.call(a, 'finallyLoc'); if (c && u) { if (this.prev < a.catchLoc) return o(a.catchLoc, !0); if (this.prev < a.finallyLoc) return o(a.finallyLoc); } else if (c) { if (this.prev < a.catchLoc) return o(a.catchLoc, !0); } else { if (!u) throw new Error('try statement without catch or finally'); if (this.prev < a.finallyLoc) return o(a.finallyLoc); } } } }, abrupt(e, t) { for (let r = this.tryEntries.length - 1; r >= 0; --r) { const o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, 'finallyLoc') && this.prev < o.finallyLoc) { var i = o; break; } }i && (e === 'break' || e === 'continue') && i.tryLoc <= t && t <= i.finallyLoc && (i = null); const a = i ? i.completion : {}; return a.type = e, a.arg = t, i ? (this.method = 'next', this.next = i.finallyLoc, m) : this.complete(a); }, complete(e, t) { if (e.type === 'throw') throw e.arg; return e.type === 'break' || e.type === 'continue' ? this.next = e.arg : e.type === 'return' ? (this.rval = this.arg = e.arg, this.method = 'return', this.next = 'end') : e.type === 'normal' && t && (this.next = t), m; }, finish(e) { for (let t = this.tryEntries.length - 1; t >= 0; --t) { const r = this.tryEntries[t]; if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), T(r), m; } }, catch(e) { for (let t = this.tryEntries.length - 1; t >= 0; --t) { const r = this.tryEntries[t]; if (r.tryLoc === e) { const n = r.completion; if (n.type === 'throw') { var o = n.arg; T(r); } return o; } } throw new Error('illegal catch attempt'); }, delegateYield(e, r, n) { return this.delegate = { iterator: S(e), resultName: r, nextLoc: n }, this.method === 'next' && (this.arg = t), m; },
        }, e;
      }(e.exports)); try { regeneratorRuntime = t; } catch (e) { typeof globalThis === 'object' ? globalThis.regeneratorRuntime = t : Function('r', 'regeneratorRuntime = r')(t); }
    },
  }; const t = {}; function r(n) { const o = t[n]; if (void 0 !== o) return o.exports; const i = t[n] = { exports: {} }; return e[n](i, i.exports, r), i.exports; }r.n = (e) => { const t = e && e.__esModule ? () => e.default : () => e; return r.d(t, { a: t }), t; }, r.d = (e, t) => { for (const n in t)r.o(t, n) && !r.o(e, n) && Object.defineProperty(e, n, { enumerable: !0, get: t[n] }); }, r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), (() => {
    const e = r(757); const t = r.n(e); const n = r(669); const o = r.n(n); const i = r(129); const a = r.n(i); function s(e, t, r, n, o, i, a) { try { var s = e[i](a); var c = s.value; } catch (e) { return void r(e); }s.done ? t(c) : Promise.resolve(c).then(n, o); } function c(e) { return function () { const t = this; const r = arguments; return new Promise(((n, o) => { const i = e.apply(t, r); function a(e) { s(i, n, o, a, c, 'next', e); } function c(e) { s(i, n, o, a, c, 'throw', e); }a(void 0); })); }; } function u(e, t) { for (let r = 0; r < t.length; r++) { const n = t[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(e, n.key, n); } } function l(e, t, r) {
      return t in e ? Object.defineProperty(e, t, {
        value: r, enumerable: !0, configurable: !0, writable: !0,
      }) : e[t] = r, e;
    } const f = (function () {
      function e() { !(function (e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function'); }(this, e)), l(this, 'DOMAIN', 'https://cpservm.com'), l(this, 'TOKEN_URI', ''.concat(this.DOMAIN, '/gateway/token')), l(this, 'MAIN_URI', ''.concat(this.DOMAIN, '/gateway/marketing/datafeed')), l(this, 'MATCHES_URI', ''.concat(this.MAIN_URI, '/prematch/api/v2/sportevents')), l(this, 'LIVE_MATCHES_URI', ''.concat(this.MAIN_URI, '/live/api/v2/sportevents')), l(this, 'DEFAULT_LANG', 'ru'), l(this, 'DEFAULT_VERSION', 'v1'), l(this, 'TOKEN', ''), l(this, 'REF', ''); } let r; let n; let i; let s; let f; let p; return r = e, (n = [{ key: 'auth', value: (p = c(t().mark((function e(r) { return t().wrap((function (e) { for (;;) switch (e.prev = e.next) { case 0: return e.abrupt('return', this.get_token(r)); case 1: case 'end': return e.stop(); } }), e, this); }))), function (e) { return p.apply(this, arguments); }) }, {
        key: 'get_token',
        value(e) {
          const t = this; return new Promise(((r, n) => {
            const i = { client_id: e.client_id, client_secret: e.client_secret }; t.REF = e.ref; const s = {
              method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, data: a().stringify(i), url: t.TOKEN_URI,
            }; o()(s).then(((e) => { t.TOKEN = e.data, r(e.data); })).catch(((e) => { n('Авторизация не удалась. Проверьте корректность введённых данных', e); }));
          }));
        },
      }, { key: 'get_catalogue', value: (f = c(t().mark((function e(r, n, i) { const a = this; return t().wrap(((e) => { for (;;) switch (e.prev = e.next) { case 0: return e.abrupt('return', new Promise(((e, t) => { const s = n != null ? n : a.DEFAULT_LANG; const c = i != null ? i : a.DEFAULT_VERSION; const u = { method: 'GET', headers: { Authorization: 'Bearer '.concat(a.TOKEN.access_token) }, url: ''.concat(a.MAIN_URI, '/directories/api/') }; switch (r) { case 'language': u.url += ''.concat(c, '/language'); break; case 'sports': u.url += ''.concat(c, '/sports?ref=').concat(a.REF, '&lng=').concat(s); break; case 'subsports': u.url += ''.concat(c, '/subsports?ref=').concat(a.REF, '&lng=').concat(s); break; case 'types': u.url += ''.concat(c, '/types?lng=').concat(s); break; case 'vid': u.url += ''.concat(c, '/vid?lng=').concat(s); break; case 'sportevents': u.url += ''.concat(c, '/sportevents?ref=').concat(a.REF, '&lng=').concat(s); break; default: t('Справочника "'.concat(r, '" не существует')); }o()(u).then(((t) => { e(t.data); })).catch(((e) => { t(e); })); }))); case 1: case 'end': return e.stop(); } }), e); }))), function (e, t, r) { return f.apply(this, arguments); }) }, {
        key: 'get_matches',
        value: (s = c(t().mark((function e(r, n) {
          const i = this; return t().wrap(((e) => {
            for (;;) {
              switch (e.prev = e.next) {
                case 0: return e.abrupt('return', new Promise(((e, t) => {
                  let a; void 0 === n && (n = 'line'); const s = {
                    lng: (a = r.lng) !== null && void 0 !== a ? a : i.DEFAULT_LANG, ref: i.REF, count: r.count, sportids: r.sportids, subsportids: r.subsportids, tournamentids: r.tournamentids, sporteventids: r.sporteventids, vids: r.vids, types: r.types, periods: r.periods, oddsIds: r.oddsIds, schemeofgettingoddspperations: r.schemeofgettingoddspperations, gtstart: r.gtstart, ltstart: r.ltstart,
                  }; let c = n.toLowerCase() == 'live' ? ''.concat(i.LIVE_MATCHES_URI, '?') : ''.concat(i.MATCHES_URI, '?'); c += 'ref='.concat(i.REF, '&'), s.lng != null && (c += 'lng='.concat(s.lng, '&')), s.count != null && (c += 'count='.concat(s.count, '&')), s.sportids != null && (c += 'sportids='.concat(s.sportids, '&')), s.subsportids != null && (c += 'subsportids='.concat(s.subsportids, '&')), s.tournamentids != null && (c += 'tournamentids='.concat(s.tournamentids, '&')), s.sporteventids != null && (c += 'sporteventids='.concat(s.sporteventids, '&')), s.vids != null && (c += 'vids='.concat(s.vids, '&')), s.types != null && (c += 'types='.concat(s.types, '&')), s.periods != null && (c += 'periods='.concat(s.periods, '&')), s.oddsIds != null && (c += 'oddsIds='.concat(s.oddsIds, '&')), s.schemeofgettingoddspperations != null && (c += 'schemeofgettingoddspperations='.concat(s.schemeofgettingoddspperations, '&')), s.gtstart != null && (c += 'gtstart='.concat(s.gtstart, '&')), s.ltstart != null && (c += 'ltstart='.concat(s.ltstart, '&')); const u = { method: 'GET', headers: { Authorization: 'Bearer '.concat(i.TOKEN.access_token) }, url: c }; o()(u).then(((t) => { e(t.data); })).catch(((e) => { console.error(e); }));
                }))); case 1: case 'end': return e.stop();
              }
            }
          }), e);
        }))), function (e, t) { return s.apply(this, arguments); }),
      }, { key: 'find_matches', value(e, t) { return e = e.filter(((e) => t.indexOf(e.constSportEventId) != -1)); } }]) && u(r.prototype, n), i && u(r, i), e;
    }()); window.Betting = f;
  })();
})();
// # sourceMappingURL=betting.js.map
